names.arg = totaldamage$EVTYPE,
col = "#FF7002",
ylab = "Total Damage ($)",
main = "Total Damage - top 10 events")
totaldamage$EVTYPE
par(mfrow=c(1,3),mar=c(11,3,3,2))
barplot(propdamage$stormPropertyDamage,
names.arg = propdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Property Damage ($)",
main="Property Damage- top 10 events")
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Crop Damage ($)",
main="Crop Damage - top 10 events")
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
ylab = "Total Damage ($)",
main = "Total Damage - top 10 events")
# This section deals with the downloading the compressed file and
# extracting it contents.
stormData <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
# The file is downloaded using the download.file function.
download.file(stormData, destfile = "../StormData.csv.bz2")
# reading data from the file
readStormData <- read.csv("../StormData.csv.bz2")
# Fetching column names of Storm Data using the colNames function
colnames(readStormData)
str(readStormData)
# Fetching first few rows of Storm Data
head(readStormData)
# fetching the unique event type in the Storm Data
head(unique(readStormData$EVTYPE))
class(readStormData$BGN_DATE)
readStormData$BGN_DATE <- as.Date(readStormData$BGN_DATE, format = "%m%d%Y %H:%m:%s")
class(readStormData$BGN_DATE)
# subsetting the Storm Data
readStormData <- subset(readStormData,
select = c(EVTYPE, FATALITIES,
INJURIES, PROPDMG, PROPDMGEXP, CROPDMG,
CROPDMGEXP))
library(dplyr)
# Aggregating and arranging the Fatalities and Injuries
stormDataFatalities <- arrange(
aggregate(FATALITIES ~ EVTYPE, data = readStormData, sum),
desc(FATALITIES), EVTYPE)[1:10,]
# Aggregated data of the Storm Fatalities based on the event type
stormDataFatalities
stormDataInjuries <- arrange(
aggregate(INJURIES ~ EVTYPE, data = readStormData, sum),
desc(INJURIES), EVTYPE)[1:10,]
# Aggregated data of the Storm Injuries based on the event type
stormDataInjuries
library(lattice)
# plotting the graphs for the Fatalities and Injuries
par(mfrow=c(1,2),mar=c(10,3,3,2))
# Fatalities by event type
barplot(stormDataFatalities$FATALITIES,
names.arg=stormDataFatalities$EVTYPE,
las=2,
col="#FF6504",
ylab="Fatalities",
main="Top 10 fatalities by weather event")
# Injuries by event type
barplot(stormDataInjuries$INJURIES,
names.arg=stormDataInjuries$EVTYPE,
las=2,
col="#FF6504",
ylab="Injuries",
main="Top 10 Injuries by weather event")
unique(readStormData$PROPDMGEXP)
# convert the notations "K","M","","B","m","+","0","5","6","?","4","2","3","h","7","H","-" "1","8" to their corresponding powers of 10 or exponential values.
readStormData$PROPEXP[readStormData$PROPDMGEXP == "K"] <- 1000
readStormData$PROPEXP[readStormData$PROPDMGEXP == "M"] <- 1000000
readStormData$PROPEXP[readStormData$PROPDMGEXP == ""] <- 1
readStormData$PROPEXP[readStormData$PROPDMGEXP == "B"] <- 1000000000
readStormData$PROPEXP[readStormData$PROPDMGEXP == "m"] <- 1000000
readStormData$PROPEXP[readStormData$PROPDMGEXP == "0"] <- 1
readStormData$PROPEXP[readStormData$PROPDMGEXP == "5"] <- 100000
readStormData$PROPEXP[readStormData$PROPDMGEXP == "6"] <- 1000000
readStormData$PROPEXP[readStormData$PROPDMGEXP == "4"] <- 10000
readStormData$PROPEXP[readStormData$PROPDMGEXP == "2"] <- 100
readStormData$PROPEXP[readStormData$PROPDMGEXP == "3"] <- 1000
readStormData$PROPEXP[readStormData$PROPDMGEXP == "h"] <- 100
readStormData$PROPEXP[readStormData$PROPDMGEXP == "7"] <- 10000000
readStormData$PROPEXP[readStormData$PROPDMGEXP == "H"] <- 100
readStormData$PROPEXP[readStormData$PROPDMGEXP == "1"] <- 10
readStormData$PROPEXP[readStormData$PROPDMGEXP == "8"] <- 100000000
# Assigning '0' to invalid exponent data
readStormData$PROPEXP[readStormData$PROPDMGEXP == "+"] <- 0
readStormData$PROPEXP[readStormData$PROPDMGEXP == "-"] <- 0
readStormData$PROPEXP[readStormData$PROPDMGEXP == "?"] <- 0
class(readStormData$PROPEXP)
# Calculating the property damage value
stormPropertyDamage <- readStormData$PROPDMG * readStormData$PROPEXP
unique(readStormData$CROPDMGEXP)
# Assigning values for the crop exponent data
readStormData$CROPEXP[readStormData$CROPDMGEXP == "M"] <- 1000000
readStormData$CROPEXP[readStormData$CROPDMGEXP == "K"] <- 1000
readStormData$CROPEXP[readStormData$CROPDMGEXP == "m"] <- 1000000
readStormData$CROPEXP[readStormData$CROPDMGEXP == "B"] <- 1000000000
readStormData$CROPEXP[readStormData$CROPDMGEXP == "0"] <- 1
readStormData$CROPEXP[readStormData$CROPDMGEXP == "k"] <- 1000
readStormData$CROPEXP[readStormData$CROPDMGEXP == "2"] <- 100
readStormData$CROPEXP[readStormData$CROPDMGEXP == ""] <- 1
# Assigning '0' to invalid exponent data
readStormData$CROPEXP[readStormData$CROPDMGEXP == "?"] <- 0
stormCropDamage <- readStormData$CROPDMG * readStormData$CROPEXP
colnames(readStormData)
# Calculating the total damage
readStormData$stormTotalDamage <- stormPropertyDamage + stormCropDamage
colnames(readStormData)
# Finding the top 10 events based on which the maximum economic destruction has occurred
propertydamage <- arrange(aggregate(stormPropertyDamage ~ EVTYPE, data=readStormData, sum),desc(stormPropertyDamage),EVTYPE)[1:10,]
propertydamage
cropdamage <- arrange(aggregate(stormCropDamage ~ EVTYPE, data=readStormData, sum),desc(stormCropDamage),EVTYPE)[1:10,]
cropdamage
totaldamage <- arrange(aggregate(stormTotalDamage ~ EVTYPE, data=readStormData, sum),desc(stormTotalDamage),EVTYPE)[1:10,]
totaldamage
library(lattice)
par(mfrow=c(1,3),mar=c(11,3,3,2))
barplot(propdamage$stormPropertyDamage,
names.arg = propdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Property Damage ($)",
main="Property Damage- top 10 events")
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Crop Damage ($)",
main="Crop Damage - top 10 events")
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
ylab = "Total Damage ($)",
main = "Total Damage - top 10 events")
library(lattice)
library(dplyr)
par(mfrow=c(1,3),mar=c(11,3,3,2))
barplot(propdamage$stormPropertyDamage,
names.arg = propdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Property Damage ($)",
main="Property Damage- top 10 events")
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Crop Damage ($)",
main="Crop Damage - top 10 events")
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
ylab = "Total Damage ($)",
main = "Total Damage - top 10 events")
library(lattice)
library(dplyr)
par(mfrow=c(1,3),mar=c(11,3,3,2))
barplot(propdamage$stormPropertyDamage,
names.arg = propdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Property Damage ($)",
main="Property Damage- top 10 events")
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Crop Damage ($)",
main="Crop Damage - top 10 events")
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
ylab = "Total Damage ($)",
main = "Total Damage - top 10 events")
library(lattice)
library(dplyr)
par(mfrow=c(1,2),mar=c(10,5,5,6))
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Crop Damage ($)",
main="Crop Damage - top 10 events")
library(lattice)
library(dplyr)
par(mfrow=c(1,2),mar=c(10,5,0,0))
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Crop Damage ($)",
main="Crop Damage - top 10 events")
library(lattice)
library(dplyr)
par(mfrow=c(1,2))
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Crop Damage ($)",
main="Crop Damage - top 10 events")
library(lattice)
library(dplyr)
par(mfrow=c(1,2))
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Crop Damage ($)",
main="Crop Damage - top 10 events")
barplot(propdamage$stormPropertyDamage,
names.arg = propdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Property Damage ($)",
main="Property Damage- top 10 events")
library(lattice)
library(dplyr)
par(mfrow=c(1,2))
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Crop Damage ($)",
main="Crop Damage - top 10 events")
barplot(propdamage$stormPropertyDamage)
library(lattice)
library(dplyr)
par(mfrow=c(1,2))
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
ylab="Crop Damage ($)",
main="Crop Damage - top 10 events")
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
ylab="Property Damage ($)",
main="Property Damage- top 10 events")
library(lattice)
library(dplyr)
par(mfrow=c(1,2))
# Plotting CROP Damage in billions($) based on the top ten event types
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
main="Crop Damage(billions($))")
# Plotting PROPERTY Damage in billions($) based on the top ten event types
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
main="Property Damage(billions($))")
library(lattice)
library(dplyr)
par(mfrow=c(1,2))
# Plotting CROP Damage in billions($) based on the top ten event types
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
main="Crop Damage(billions($))")
# Plotting PROPERTY Damage in billions($) based on the top ten event types
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
main="Property Damage(billions($))")
# Plotting TOTAL damage in billions($) based on the top ten event types
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
main = "Total Damage(billions($))")
library(lattice)
library(dplyr)
par(mfrow=c(1,3))
# Plotting CROP Damage in billions($) based on the top ten event types
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
main="Crop Damage(billions($))")
# Plotting PROPERTY Damage in billions($) based on the top ten event types
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
main="Property Damage(billions($))")
# Plotting TOTAL damage in billions($) based on the top ten event types
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
main = "Total Damage(billions($))")
library(lattice)
library(dplyr)
par(mfrow=c(1,3), mar = c(10, 0, 0, 0))
# Plotting CROP Damage in billions($) based on the top ten event types
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
main="Crop Damage(billions($))")
# Plotting PROPERTY Damage in billions($) based on the top ten event types
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
main="Property Damage(billions($))")
# Plotting TOTAL damage in billions($) based on the top ten event types
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
main = "Total Damage(billions($))")
library(lattice)
library(dplyr)
par(mfrow=c(1,3), mar = c(10, 2, 0, 0))
# Plotting CROP Damage in billions($) based on the top ten event types
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
main="Crop Damage(billions($))")
# Plotting PROPERTY Damage in billions($) based on the top ten event types
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
main="Property Damage(billions($))")
# Plotting TOTAL damage in billions($) based on the top ten event types
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
main = "Total Damage(billions($))")
library(lattice)
library(dplyr)
par(mfrow=c(1,3), mar = c(10, 2, 0, 0))
# Plotting CROP Damage in billions($) based on the top ten event types
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
main="Crop Damage(billions($))")
# Plotting PROPERTY Damage in billions($) based on the top ten event types
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
main="Property Damage(billions($))")
# Plotting TOTAL damage in billions($) based on the top ten event types
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
main = "Total Damage(billions($))")
par(mfrow=c(1,3), mar = c(10, 2, 0, 0))
# Plotting CROP Damage in billions($) based on the top ten event types
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
main="Crop Damage(billions($))")
# Plotting PROPERTY Damage in billions($) based on the top ten event types
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
main="Property Damage(billions($))")
# Plotting TOTAL damage in billions($) based on the top ten event types
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
main = "Total Damage(billions($))")
library(lattice)
library(dplyr)
par(mfrow=c(1,3), mar = c(15, 5, 0, 0))
# Plotting CROP Damage in billions($) based on the top ten event types
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
main="Crop Damage(billions($))")
# Plotting PROPERTY Damage in billions($) based on the top ten event types
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
main="Property Damage(billions($))")
# Plotting TOTAL damage in billions($) based on the top ten event types
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
main = "Total Damage(billions($))")
par(mfrow=c(1,3), mar = c(15, 5, 0, 0))
# Plotting CROP Damage in billions($) based on the top ten event types
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
main="Crop Damage(billions($))")
# Plotting PROPERTY Damage in billions($) based on the top ten event types
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
main="Property Damage(billions($))")
# Plotting TOTAL damage in billions($) based on the top ten event types
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
main = "Total Damage(billions($))")
library(lattice)
library(dplyr)
par(mfrow=c(1,3), mar = c(0, 15, 0, 0))
# Plotting CROP Damage in billions($) based on the top ten event types
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
main="Crop Damage(billions($))")
# Plotting PROPERTY Damage in billions($) based on the top ten event types
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
main="Property Damage(billions($))")
# Plotting TOTAL damage in billions($) based on the top ten event types
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
main = "Total Damage(billions($))")
par(mfrow=c(1,3), mar = c(0, 15, 0, 0))
# Plotting CROP Damage in billions($) based on the top ten event types
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
main="Crop Damage(billions($))")
# Plotting PROPERTY Damage in billions($) based on the top ten event types
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
main="Property Damage(billions($))")
# Plotting TOTAL damage in billions($) based on the top ten event types
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
main = "Total Damage(billions($))")
library(lattice)
library(dplyr)
par(mfrow=c(1,3))
# Plotting CROP Damage in billions($) based on the top ten event types
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
main="Crop Damage(billions($))")
# Plotting PROPERTY Damage in billions($) based on the top ten event types
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
main="Property Damage(billions($))")
# Plotting TOTAL damage in billions($) based on the top ten event types
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
main = "Total Damage(billions($))")
par(mfrow=c(1,3))
# Plotting CROP Damage in billions($) based on the top ten event types
barplot(cropdamage$stormCropDamage,
names.arg = cropdamage$EVTYPE,
las = 2,
col="#FF7002",
main="Crop Damage(billions($))")
# Plotting PROPERTY Damage in billions($) based on the top ten event types
barplot(propertydamage$stormPropertyDamage,
names.arg = propertydamage$EVTYPE,
las =2,
col = "#FF7002",
main="Property Damage(billions($))")
# Plotting TOTAL damage in billions($) based on the top ten event types
barplot(totaldamage$stormTotalDamage,
names.arg = totaldamage$EVTYPE,
las = 2,
col = "#FF7002",
main = "Total Damage(billions($))")
